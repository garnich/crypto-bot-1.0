import os
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes
from dotenv import load_dotenv

load_dotenv()

# ===== –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è =====

TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

# –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
ALLOWED_USERS = set(map(int, os.getenv("WHITELIST", "").split(",")))

# ===== –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ =====
def is_allowed(user_id: int) -> bool:
    return user_id in ALLOWED_USERS

# ===== –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ =====
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if not is_allowed(user_id):
        await update.message.reply_text(f"‚õî –î–æ—Å—Ç—É–ø c userID:{user_id} –∑–∞–ø—Ä–µ—â—ë–Ω.\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. ")
        return
    await update.message.reply_text(f"‚úÖ –ü—Ä–∏–≤–µ—Ç, {update.effective_user.first_name}! \nuserID: {update.effective_user.id}")

async def secret(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if not is_allowed(user_id):
        await update.message.reply_text(f"‚õî –î–æ—Å—Ç—É–ø c userID:{user_id} –∑–∞–ø—Ä–µ—â—ë–Ω.\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. ")
        return
    await update.message.reply_text("ü§´ –≠—Ç–æ —Å–µ–∫—Ä–µ—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö!")

# ===== –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ =====
def main():
    if not TOKEN:
        raise ValueError("–ù–µ –Ω–∞–π–¥–µ–Ω TELEGRAM_BOT_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("secret", secret))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()
